# components file contains a single namespace which will be applied
# by default to all namespaced components if --target-namespace is not
# used
apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
  name: weavek8sops
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  name: sealedsecrets.bitnami.com
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
spec:
  group: bitnami.com
  names:
    kind: SealedSecret
    listKind: SealedSecretList
    plural: sealedsecrets
    singular: sealedsecret
  scope: Namespaced
  version: v1alpha1
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: clusters.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: Cluster
    plural: clusters
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            clusterNetwork:
              properties:
                pods:
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
                serviceDomain:
                  type: string
                services:
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
              required:
              - services
              - pods
              - serviceDomain
              type: object
            providerSpec:
              properties:
                value:
                  type: object
                valueFrom:
                  properties:
                    machineClass:
                      properties:
                        provider:
                          type: string
                      type: object
                  type: object
              type: object
          required:
          - clusterNetwork
          type: object
        status:
          properties:
            apiEndpoints:
              items:
                properties:
                  host:
                    type: string
                  port:
                    format: int64
                    type: integer
                required:
                - host
                - port
                type: object
              type: array
            errorMessage:
              type: string
            errorReason:
              type: string
            providerStatus:
              type: object
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machinesets.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: MachineSet
    plural: machinesets
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.labelSelector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            minReadySeconds:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            selector:
              type: object
            template:
              properties:
                metadata:
                  type: object
                spec:
                  properties:
                    configSource:
                      type: object
                    metadata:
                      type: object
                    providerSpec:
                      properties:
                        value:
                          type: object
                        valueFrom:
                          properties:
                            machineClass:
                              properties:
                                provider:
                                  type: string
                              type: object
                          type: object
                      type: object
                    taints:
                      items:
                        type: object
                      type: array
                    versions:
                      properties:
                        controlPlane:
                          type: string
                        kubelet:
                          type: string
                      required:
                      - kubelet
                      type: object
                  required:
                  - providerSpec
                  type: object
              type: object
          required:
          - selector
          type: object
        status:
          properties:
            availableReplicas:
              format: int32
              type: integer
            errorMessage:
              type: string
            errorReason:
              type: string
            fullyLabeledReplicas:
              format: int32
              type: integer
            observedGeneration:
              format: int64
              type: integer
            readyReplicas:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
          required:
          - replicas
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machines.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: Machine
    plural: machines
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            configSource:
              type: object
            metadata:
              type: object
            providerSpec:
              properties:
                value:
                  type: object
                valueFrom:
                  properties:
                    machineClass:
                      properties:
                        provider:
                          type: string
                      type: object
                  type: object
              type: object
            taints:
              items:
                type: object
              type: array
            versions:
              properties:
                controlPlane:
                  type: string
                kubelet:
                  type: string
              required:
              - kubelet
              type: object
          required:
          - providerSpec
          type: object
        status:
          properties:
            addresses:
              items:
                type: object
              type: array
            conditions:
              items:
                type: object
              type: array
            errorMessage:
              type: string
            errorReason:
              type: string
            lastOperation:
              properties:
                description:
                  type: string
                lastUpdated:
                  format: date-time
                  type: string
                state:
                  type: string
                type:
                  type: string
              type: object
            lastUpdated:
              format: date-time
              type: string
            nodeRef:
              type: object
            phase:
              type: string
            providerStatus:
              type: object
            versions:
              properties:
                controlPlane:
                  type: string
                kubelet:
                  type: string
              required:
              - kubelet
              type: object
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machinedeployments.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: MachineDeployment
    plural: machinedeployments
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.labelSelector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            minReadySeconds:
              format: int32
              type: integer
            paused:
              type: boolean
            progressDeadlineSeconds:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            revisionHistoryLimit:
              format: int32
              type: integer
            selector:
              type: object
            strategy:
              properties:
                rollingUpdate:
                  properties:
                    maxSurge:
                      oneOf:
                      - type: string
                      - type: integer
                    maxUnavailable:
                      oneOf:
                      - type: string
                      - type: integer
                  type: object
                type:
                  type: string
              type: object
            template:
              properties:
                metadata:
                  type: object
                spec:
                  properties:
                    configSource:
                      type: object
                    metadata:
                      type: object
                    providerSpec:
                      properties:
                        value:
                          type: object
                        valueFrom:
                          properties:
                            machineClass:
                              properties:
                                provider:
                                  type: string
                              type: object
                          type: object
                      type: object
                    taints:
                      items:
                        type: object
                      type: array
                    versions:
                      properties:
                        controlPlane:
                          type: string
                        kubelet:
                          type: string
                      required:
                      - kubelet
                      type: object
                  required:
                  - providerSpec
                  type: object
              type: object
          required:
          - selector
          - template
          type: object
        status:
          properties:
            availableReplicas:
              format: int32
              type: integer
            observedGeneration:
              format: int64
              type: integer
            readyReplicas:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            unavailableReplicas:
              format: int32
              type: integer
            updatedReplicas:
              format: int32
              type: integer
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capa-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-existinginfra
    cluster.x-k8s.io/v1alpha3: v1alpha3
    controller-tools.k8s.io: "1.0"
  name: machineclasses.cluster.k8s.io
spec:
  group: cluster.k8s.io
  names:
    kind: MachineClass
    plural: machineclasses
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        providerSpec:
          type: object
      required:
      - providerSpec
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: existinginframachines.cluster.weave.works
  labels:
    cluster.x-k8s.io/v1alpha3: v1alpha3
spec:
  group: cluster.weave.works
  names:
    kind: ExistingInfraMachine
    listKind: ExistingInfraMachineList
    plural: existinginframachines
    singular: existinginframachine
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            private:
              description: EndPoint groups the details required to establish a connection.
              properties:
                address:
                  type: string
                port:
                  type: integer
              required:
              - address
              - port
              type: object
            providerID:
              type: string
            public:
              description: EndPoint groups the details required to establish a connection.
              properties:
                address:
                  type: string
                port:
                  type: integer
              required:
              - address
              - port
              type: object
          type: object
        status:
          properties:
            ready:
              type: boolean
          required:
          - ready
          type: object
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: existinginfraclusters.cluster.weave.works
  labels:
    cluster.x-k8s.io/v1alpha3: v1alpha3
spec:
  group: cluster.weave.works
  names:
    kind: ExistingInfraCluster
    listKind: ExistingInfraClusterList
    plural: existinginfraclusters
    singular: existinginfracluster
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            addons:
              items:
                description: Addon describes an addon to install on the cluster.
                properties:
                  deps:
                    items:
                      type: string
                    type: array
                  name:
                    type: string
                  params:
                    additionalProperties:
                      type: string
                    type: object
                required:
                - name
                type: object
              type: array
            apiServer:
              properties:
                additionalSANs:
                  items:
                    type: string
                  type: array
                extraArguments:
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                    - name
                    - value
                    type: object
                  type: array
              type: object
            authenticationWebhook:
              properties:
                cacheTTL:
                  type: string
                secretFile:
                  type: string
                url:
                  type: string
              required:
              - secretFile
              - url
              type: object
            authorizationWebhook:
              properties:
                cacheAuthorizedTTL:
                  type: string
                cacheUnauthorizedTTL:
                  type: string
                secretFile:
                  type: string
                url:
                  type: string
              required:
              - secretFile
              - url
              type: object
            cloudProvider:
              type: string
            controlPlaneEndpoint:
              type: string
            cri:
              properties:
                kind:
                  type: string
                package:
                  type: string
                version:
                  type: string
              required:
              - kind
              - package
              - version
              type: object
            httpProxy:
              type: string
            imageRepository:
              type: string
            kubeletArguments:
              items:
                properties:
                  name:
                    type: string
                  value:
                    type: string
                required:
                - name
                - value
                type: object
              type: array
            kubernetesVersion:
              type: string
            controlPlaneMachineCount:
              type: string
            workerMachineCount:
              type: string
            os:
              properties:
                files:
                  items:
                    properties:
                      destination:
                        type: string
                      source:
                        properties:
                          configmap:
                            type: string
                          key:
                            type: string
                          contents:
                            type: string
                        required:
                        - configmap
                        - key
                        - contents
                        type: object
                    required:
                    - destination
                    - source
                    type: object
                  type: array
              type: object
            sshKeyPath:
              type: string
            user:
              type: string
          required:
          - cri
          - user
          type: object
        status:
          properties:
            ready:
              type: boolean
          required:
          - ready
          type: object
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wks-controller-role
rules:
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - machines
  - machines/status
  - machinedeployments
  - machinesets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.weave.works
  resources:
  - existinginfraclusters
  - existinginfraclusters/status
  - existinginframachines
  - existinginframachines/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  # pods/eviction is required for the WKS controller to be able to evict pods
  # upon machine deletions.
  - pods/eviction
  - pods
  - nodes
  - events
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - update
# The below is required for the WKS controller to be able to delete daemonsets
# upon machine deletions.
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wks-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wks-controller-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: ${NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  - controlplane.cluster.x-k8s.io
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  - exp.infrastructure.cluster.x-k8s.io
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - bootstrap.cluster.x-k8s.io
  - infrastructure.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  - machinedeployments/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinehealthchecks
  - machinehealthchecks/status
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinesets
  - machinesets/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - exp.cluster.x-k8s.io
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - exp.cluster.x-k8s.io
  resources:
  - machinepools
  - machinepools/status
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: ${NAMESPACE}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wks-controller
  namespace: ${NAMESPACE}
  labels:
    name: wks-controller
    control-plane: wks-controller
    controller-tools.k8s.io: "1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: wks-controller
  template:
    metadata:
      labels:
        name: wks-controller
        control-plane: wks-controller
        controller-tools.k8s.io: "1.0"
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
      # Allow scheduling on master nodes. This is required because during
      # bootstrapping of the cluster, we may initially have just one master,
      # and would then need to deploy this controller there to set the entire
      # cluster up.
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      # Mark this as a critical addon:
      - key: CriticalAddonsOnly
        operator: Exists
      # Only schedule on nodes which are ready and reachable:
      - effect: NoExecute
        key: node.alpha.kubernetes.io/notReady
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/unreachable
        operator: Exists
      containers:
      - name: controller
        image: ${EXISTINGINFRA_CONTROLLER_IMAGE:-"weaveworks/cluster-api-existinginfra-controller:v0.0.6"}
        env:
        - name: EXISTINGINFRA_CONTROLLER_IMAGE
          value: ${EXISTINGINFRA_CONTROLLER_IMAGE:-"weaveworks/cluster-api-existinginfra-controller:v0.0.6"}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        args:
        - --verbose
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi


